package main

import "fmt"

func removeDuplicates(nums []int) int {
	if len(nums) == 0 {
		return 0
	}

	slow := 0

	for fast := 1; fast < len(nums); fast++ {
		if nums[fast] != nums[slow] {
			slow++
			nums[slow] = nums[fast]
		}
	}

	k := slow + 1

	return k
}

func main() {
	// Пример из вашего кода и задачи
	slice := []int{1, 1, 2}
	fmt.Println("Исходный срез:", slice) // Выведет: Исходный срез: [1 1 2]

	k := removeDuplicates(slice)

	// Задача требует, чтобы nums был изменен на месте.
	// Первые k элементов slice теперь содержат уникальные элементы.
	// Элементы после k не имеют значения для задачи.
	fmt.Println("Срез после удаления дубликатов (первые k элементов важны):", slice) // Выведет: Срез после удаления дубликатов (первые k элементов важны): [1 2 2] (обратите внимание, последний элемент не имеет значения)
	fmt.Println("Количество уникальных элементов (k):", k)                           // Выведет: Количество уникальных элементов (k): 2

	// Дополнительный пример
	slice2 := []int{0, 0, 1, 1, 1, 2, 2, 3, 3, 4}
	fmt.Println("\nИсходный срез 2:", slice2) // Выведет: Исходный срез 2: [0 0 1 1 1 2 2 3 3 4]
	k2 := removeDuplicates(slice2)
	fmt.Println("Срез 2 после удаления дубликатов:", slice2) // Выведет: Срез 2 после удаления дубликатов: [0 1 2 3 4 x x x x x] (где x - старые значения)
	fmt.Println("Количество уникальных элементов (k):", k2)  // Выведет: Количество уникальных элементов (k): 5
}
